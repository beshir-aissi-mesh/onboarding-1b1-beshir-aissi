import { EVMWalletStrategy } from './EVMWalletStrategy';
import { SolanaWalletStrategy } from './SolanaWalletStrategy';
var WalletStrategyFactory = /** @class */ (function () {
    function WalletStrategyFactory() {
        this.strategies = new Map();
        this.strategies.set('evm', new EVMWalletStrategy());
        this.strategies.set('solana', new SolanaWalletStrategy());
    }
    WalletStrategyFactory.getInstance = function () {
        if (!WalletStrategyFactory.instance) {
            WalletStrategyFactory.instance = new WalletStrategyFactory();
        }
        return WalletStrategyFactory.instance;
    };
    WalletStrategyFactory.prototype.getStrategy = function (networkType) {
        var strategy = this.strategies.get(networkType);
        if (!strategy) {
            throw new Error("No strategy found for network type: ".concat(networkType));
        }
        return strategy;
    };
    WalletStrategyFactory.prototype.getAllProviders = function () {
        var allProviders = [];
        this.strategies.forEach(function (strategy) {
            allProviders.push.apply(allProviders, strategy.getProviders());
        });
        return allProviders;
    };
    return WalletStrategyFactory;
}());
export { WalletStrategyFactory };
