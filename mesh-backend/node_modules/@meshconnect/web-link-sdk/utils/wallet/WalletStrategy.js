var BaseWalletStrategy = /** @class */ (function () {
    function BaseWalletStrategy() {
    }
    BaseWalletStrategy.prototype.handleError = function (error, operation) {
        console.error("".concat(operation, " error:"), error);
        if (error instanceof Error) {
            return error;
        }
        return new Error("Failed to ".concat(operation));
    };
    BaseWalletStrategy.prototype.isUserRejection = function (error) {
        var _a;
        if (!error)
            return false;
        var message = ((_a = error.message) === null || _a === void 0 ? void 0 : _a.toLowerCase()) || '';
        //4001 - user reject, -32603 internal error
        var errorCodes = [4001, -32603];
        return (message.includes('user rejected') ||
            message.includes('declined') ||
            message.includes('cancelled') ||
            errorCodes.includes(error.code));
    };
    return BaseWalletStrategy;
}());
export { BaseWalletStrategy };
